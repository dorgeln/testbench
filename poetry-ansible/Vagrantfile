# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

# Include box configuration from YAML file boxes.yml
require 'yaml'


#boxes['all']['hosts'].each_with_index do |opts, index|
#  puts opts
#end
#boxes.each_with_index do |opts, index|
#  config.vm.define opts[:name] do |config|
#    config.vm.hostname = opts[:name] + ".cluster.test"
#    config.vm.network :private_network, ip: opts[:ip]

boxes = YAML.load_file(File.join(File.dirname(__FILE__), 'inventory/vagrant.yml'))['all']['hosts']
boxes.each do |name,opts|
   # puts "#{name} = #{opts}"

   Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
     #config.hostmanager.enabled= true
     #config.hostmanager.manage_host=true
     #config.hostmanager.manage_guest=true
     #config.hostmanager.ignore_private_ip = false
     #config.hostmanager.include_offline   = true
     config.ssh.insert_key = false
     config.ssh.keys_only = true
     config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa']
     config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys" # 3
     config.vm.synced_folder '.', '/vagrant', disabled: true

     config.vm.define name do |machine|
       machine.vm.hostname = name
       machine.vm.box = opts["box"]
       machine.vm.network :private_network, ip: opts["ansible_ssh_host"], netmask:opts["netmask"]
       machine.vm.provision "shell", path: opts["skript"]
       #machine.vm.provision :ansible do |ansible|
        # Disable default limit to connect to all the machines
      #  ansible.limit = "all"
      #  ansible.playbook = "vagrant.yml"
      #end
       #config.vm.box = "generic/debian10"
        #config.vm.network :private_network, ip: opts[:ip]
    end
  end
end

  #config.vm.box = "geerlingguy/debian10"
  # config.ssh.insert_key = false
  #config.vm.provider "virtualbox"
  # config.vm.synced_folder '.', '/vagrant', disabled: true


  # Define three VMs with static private IP addresses.
  #boxes = [
  #  { :name => "karch", :ip => "192.168.7.2" , :box => "generic/arch"},
  #  { :name => "kfed", :ip => "192.168.7.3" , :box => "generic/fedora33"},
  #  { :name => "kdeb", :ip => "192.168.7.4" , :box => "generic/debian10"},
  #]

  # Configure each of the VMs.
  #boxes.each_with_index do |opts, index|
  #  config.vm.define opts[:name] do |config|
  #    config.vm.box = opts[:box]
  #    config.vm.hostname = opts[:name] + ".cluster.test"
  #    config.vm.network :private_network, ip: opts[:ip]

  #  end
  #end


  # puts boxes['all']['hosts'].inspect
  # boxes.each { |b| puts b }
  # boxes.each { |name,opts| puts "#{name} = #{opts}" }
  #boxes.each do |name,opts|
  #    config.vm.hostname = name
  #    config.vm.box = "generic/arch"
      #config.vm.network :private_network, ip: opts[:ip]

  #end
#end
